---
import Navbar from "../components/Navbar.astro";
import Foot from "../components/Foot.astro";


interface Props {
	title: string;
}
const { title } = Astro.props;

import "../styles/global-web.css"
---

<!doctype html>
<html lang="en">
<head>

    <!-- Google tag (gtag.js) -->
<script is:inline async src="https://www.googletagmanager.com/gtag/js?id=G-FGX3M398L2"></script>
<script is:inline>
  
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());


  gtag('config', 'G-FGX3M398L2', { 'debug_mode':true });
  gtag('config', 'G-CMHZP0XZLP', {'cookie_prefix': 'omni', 'debug_mode':true });
  gtag('event', 'testing', {'parameter_c':'value from NUHC' });


  
</script>

    <meta charset="UTF-8" />
    <meta name="description" content="Web B description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/nuhsfav.png" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <!-- <link href="src/styles/global-web.css" id="dynamic-style" rel="stylesheet"> -->

</head>
<body class="flex flex-col min-h-screen"> <!-- Apply Flexbox and min-height here -->
    <header>
        <Navbar/>
    </header>
    
    <main class="flex-grow"> <!-- This allows the content to grow and push the footer down -->
        <div class="px-4 mx-auto max-w-7xl sm:px-6 lg:px-8">
            <!-- Content goes here -->
            <slot />
        </div>
    </main>
    
    <footer class="Foot"> <!-- Optionally, you can add Tailwind classes for styling -->
        <Foot/>
    </footer>
</body>
</html>

<script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
        const params = new URLSearchParams(window.location.search);
        const theme = params.get('theme'); // Assuming the URL parameter is named 'theme'
        if (theme) {
        document.querySelectorAll('a').forEach(function(link) {
            const url = new URL(link.href, window.location.origin);
            url.searchParams.set('theme', theme); // Append or overwrite the 'theme' parameter
            link.href = url.toString();
        });
    }

    gtag('event', 'themes', {'theme': theme });
    console.log('theme:', theme);
        // Define theme styles as objects or strings
        const themes = {
            app: `
            h1, h2, h3, h4, h5, h6 {
  color: #1e3a8a !important; /* text-blue-900 */
}

p {
  color: #6b7280 !important; /* text-gray-500 */
  font-size: 1.5rem !important; /* text-2xl, assuming the base font-size is 16px */
}

#menu, #footer, #articles, #cta-links {
  display: none !important; /* hidden */
}

.button-blue {
  background-color: #1e40af !important; /* bg-blue-800 */
}

            `,
            mobile: `
                body { background-color: #fff; color: #000; }
                a { color: #007bff; }
                #menu, #footer {
  display: none !important; /* hidden */
}
                .theme-specific { /* Additional light theme styles */ }
            `
        };
    
        // Check if the theme parameter exists and is defined in the themes object
        if (theme && themes[theme]) {
            const styleElement = document.createElement('style');
            document.head.appendChild(styleElement);
            styleElement.textContent = themes[theme];
        }
        

        
    });


      const profileName = 'Patient';
      const userRole = 'NUHC visitor';
      gtag('set', 'user_properties', { 'profile': profileName, 'role': userRole });
      

    
    </script>


<!-- <script>
    document.addEventListener('DOMContentLoaded', () => {
    const params = new URLSearchParams(window.location.search);
    const theme = params.get('theme'); // Assuming the URL parameter is named 'theme'

    let themeCssPath = 'src/styles/global-web.css'; // Default CSS path
    if (theme === 'app') {
        themeCssPath = 'src/styles/app.css';
        console.log('theme change triggered - app')
    } else if (theme === 'mobile') {
        themeCssPath = 'src/styles/mobile-web.css';
        console.log('theme change triggered - mobile')
    }

    const styleElement = document.getElementById('dynamic-style');
    if(styleElement instanceof HTMLLinkElement) {
        styleElement.href = themeCssPath;
    }
});
</script> -->